#pragma once
#include "./any.hh"

#include "./lift.hh"




XTAL_ENV_(push)
namespace xtal::process
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////
///\
Convenience wrapper to repack the result of the provided process \
to make it suitable for output to `pack::transpack_f`. \

template <typename ...As>
using conveyor   = confined  <lift<decltype([] XTAL_1FN_(call) (bond::repack_f))>, As...>;

template <typename ...As>
using conveyor_t = confined_t<lift<decltype([] XTAL_1FN_(call) (bond::repack_f))>, As...>;


////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
