#pragma once
#include "./any.ii"






XTAL_ENV_(push)
namespace xtal::process
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

template <typename ..._s> XTAL_NYM chain;
template <typename ..._s> XTAL_USE chain_t = confined_t<chain<_s...>>;


////////////////////////////////////////////////////////////////////////////////

template <typename ...As>
struct chain
:	bond::compose<chain<As>...>
{
};
template <incomplete_q A>
struct chain<A>
:	bond::compose<>
{
};
template <bond::compose_q A>
struct chain<A>
:	chain<confined_t<A>>
{
};
template <class A>
struct chain<A>
:	defer<A>
{
};


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
