#pragma once
#include "./any.ii"






XTAL_ENV_(push)
namespace xtal::message
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

struct per
{
private:
	using U = unsigned_t<typename common::computer::iota_t>;
	using V = typename common::computer::alpha_t;

public:
	using subkind = common::compose<defer<U>, defer<V>>;

	template <any_q S>
	class subtype: public common::compose_s<S, subkind>
	{
		using _S = common::compose_s<S, subkind>;

	public:
	//	using _S::_S;
		
		XTAL_CO0_(subtype);
		XTAL_CO4_(subtype);

		XTAL_CXN subtype(_std::integral auto n, XTAL_DEF ...oo)
		XTAL_0EX
		:	_S(n, (V) 1/V(n), XTAL_REF_(oo)...)
		{}
		XTAL_CXN subtype(_std::floating_point auto u, XTAL_DEF ...oo)
		XTAL_0EX
		:	_S((U) 1/V(u), u, XTAL_REF_(oo)...)
		{}

		XTAL_TO4_(XTAL_TN2   rate(), _S::template head<0>())
		XTAL_TO4_(XTAL_TN2 period(), _S::template head<1>())

	};
};
using per_t = confined_t<per>;


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
