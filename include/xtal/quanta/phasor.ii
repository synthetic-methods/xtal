#pragma once
#include "./any.ii"
#include "./fusor.ii"
#include "../quantum/phase.ii"




XTAL_ENV_(push)
namespace xtal::quanta
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

template <                     typename ..._s> XTAL_NYM phasor;
template <                     typename ..._s> XTAL_ASK phasor_q = bond::tagged_p<phasor, _s...>;
template <array_q W=size_t[2], typename ...As> XTAL_USE phasor_t = confined_t<phasor<W, As...>>;


////////////////////////////////////////////////////////////////////////////////
///\

template <size_t N, class U, typename ...As>
struct phasor<U[N], As...>
{
	using W_phase = quantum::phase_t<U>[N];
	using subkind = bond::compose<bond::tag<phasor>, As..., fusor<W_phase>>;

	template <class S>
	using subtype = bond::compose_s<S, subkind>;

};


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
