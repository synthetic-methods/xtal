#pragma once
#include "./any.ii"






XTAL_ENV_(push)
namespace xtal::compound
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
///\
Wrapper used to index an existing type. \

///\see e.g. [../processor/polymer.ipp]. \

template <typename ..._s> XTAL_NYM key;
template <class    ...Ts> XTAL_ASK key_q = atom::tag_p<key, Ts...>;

template <class U> struct key<U>: conferred<U, atom::tag<key>> {};
template <       > struct key< >: key<size_t> {};

template <class S=void, typename ...As>
using key_s = atom::compose_s<complete_t<S, confined_t<>>, key<As...>>;


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
