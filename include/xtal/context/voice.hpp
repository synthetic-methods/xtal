#pragma once
#include "./any.hpp"






XTAL_ENV_(push)
namespace xtal::context
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////

template <typename U=_std::ptrdiff_t>
struct voice
:	lift<U, only<voice>>
{
};
template <typename S=confined_t<>, typename U=_std::ptrdiff_t>
using voice_s = compose_s<S, voice<U>>;


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
