#pragma once
#include "./any.hpp"






XTAL_ENV_(push)
namespace xtal::context
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////

template <typename ...   > struct  cue;
template <typename    U  > struct  cue<U>: lift<U, tag<cue>> {};
template <typename ...Ts > concept cue_q = tag_q<cue, Ts...>;

template <typename S=confined_t<>, typename U=_std::ptrdiff_t>
using cue_s = compose_s<S, cue<U>>;


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
