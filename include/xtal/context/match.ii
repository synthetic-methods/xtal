#pragma once
#include "./any.ii"






XTAL_ENV_(push)
namespace xtal::context
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
///\
Wrapper used to access a masked property.\

///\see e.g. [../message/any#attach] or [../message/any#dispatch]. \

template <typename ..._s> XTAL_NYM match;
template <class       U > XTAL_NYM match<U>: conferred<U, common::tag<match>> {};
template <class    ...Ts> XTAL_ASK match_q = common::tag_p<match, Ts...>;

template <class S=confined_t<>, class U=size_s>
using match_s = common::compose_s<S, match<U>>;


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
