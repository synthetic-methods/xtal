#pragma once
#include "./any.hpp"






XTAL_ENV_(push)
namespace xtal::context
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////

template <typename ...   > struct  instance;
template <typename    U  > struct  instance<U>: lift<U, tag<instance>> {};
template <typename ...Ts > concept instance_q = tag_q<instance, Ts...>;

template <typename S=confined_t<>, typename U=_std::ptrdiff_t>
using instance_s = compose_s<S, instance<U>>;


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
