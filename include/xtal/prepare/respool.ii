#pragma once
#include "./any.ii"






XTAL_ENV_(push)
namespace xtal::prepare
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

XTAL_NYM T_respool;
template <class ...Ts> concept respool_q = common::tab_p<T_respool, Ts...>;


////////////////////////////////////////////////////////////////////////////////
///\
Provides a specialization of `common::fluid::spool`. \
If `N == -1`, the member-type `spool_t` is dynamically allocated. \

template <int N=-1>
struct respool
{
	using subkind = common::tab<T_respool>;
	
	template <any_q S>
	class subtype: public common::compose_s<S, subkind>
	{
		using S_ = common::compose_s<S, subkind>;
		
	public:
		using S_::S_;
		
		template <class U>
		using spool_t = common::fluid::spool_t<U[(unsigned) N]>;

	};
};


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
