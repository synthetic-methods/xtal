#pragma once
#include "./any.ii"






XTAL_ENV_(push)
namespace xtal::bond
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////

template <class Y>
struct tab
{
	class type
	{};
	template <class S>
	class subtype: public type, public S
	{
	public:
		using S::S;
		
	};
	template <of_q<type> S>
	class subtype<S>: public S
	{
	public:
		using S::S;
		
	};
};
template <class Y>
using tab_t = typename tab<Y>::type;

template <class Y, class ...Ts> concept   tabbed_p =     of_p<tab_t<Y>, Ts...>;
template <class Y, class ...Ts> concept untabbed_p = not of_p<tab_t<Y>, Ts...>;

template <class T, class Y> concept   tabbed_q = tabbed_p<Y, T>;
template <class T, class Y> concept untabbed_q = tabbed_p<Y, T>;


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
