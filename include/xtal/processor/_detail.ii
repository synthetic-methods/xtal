namespace _detail
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

using namespace _retail::_detail;


////////////////////////////////////////////////////////////////////////////////

template <class U>	concept unprocessed_valued_q = not _retail::any_q<U> and       number_q<U>;
template <class U>	concept unprocessed_ranged_q = not _retail::any_q<U> and     iterable_q<U>;
template <class U>	concept processed_unranged_q =     _retail::any_q<U> and not iterable_q<U>;


////////////////////////////////////////////////////////////////////////////////

template <class T, class Y=T>
concept connection_p = any_q<T> and requires (T t)
{
	{t.state()} -> isomorphic_q<Y>;
};
template <class T, class Y=T>
concept collection_p = any_q<T> and requires (T t)
{
	{t.state()} -> isomorphic_q<Y>;
	{t.store()} -> isomorphic_q<Y>;
};
template <class T, class Y>
concept recollection_p = collection_p<T, Y> and _std::is_rvalue_reference_v<T>;


}//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
