#pragma once
#include "./any.hh"

#include "../cell/header.hh"




XTAL_ENV_(push)
namespace xtal::flow
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
///\
Insulated `cell::header` used to prefix `assignment`. \

template <class ..._s>	struct  assign;
template <class ..._s>	using   assign_s = bond::compose_s<let_t< _s...>, assign<>>;
template <class ..._s>	concept assign_q = bond:: tagged_p<assign_s, _s...>;

XTAL_FX0_(to) (template <class ...Ts>
XTAL_DEF_(return,inline,let)
assign_f(Ts &&...ts),
	assign_s<based_t<Ts>...>(XTAL_REF_(ts)...))


////////////////////////////////////////////////////////////////////////////////

template <>
struct assign<>
:	cell::header<bond::tag<assign_s>>
{
};


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
