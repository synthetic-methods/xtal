#pragma once
#include "./any.hh"

#include "../cell/header.hh"




XTAL_ENV_(push)
namespace xtal::flow
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
///\
Insulated `cell::header` used to prefix `assessment`. \

template <class ..._s>	struct  assess;
template <class ..._s>	using   assess_s = bond::compose_s<let_t< _s...>, assess<>>;
template <class ..._s>	concept assess_q = bond:: tagged_p<assess_s, _s...>;

XTAL_FX0_(to) (template <class ...Ts>
XTAL_DEF_(return,inline,let)
assess_f(Ts &&...ts),
	assess_s<based_t<Ts>...>(XTAL_REF_(ts)...))


////////////////////////////////////////////////////////////////////////////////

template <>
struct assess<>
:	cell::header<bond::tag<assess_s>>
{
};


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
