#pragma once
#include "./any.hh"

#include "../cell/header.hh"




XTAL_ENV_(push)
namespace xtal::flow
{/////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
/*!
\brief
Reifies the `signed` template-parameter for the `flux` and `fuse` methods.

\details
Used when the `flux`/`fuse` signature is reified, as in `schedule::slider`.
*/
template <class ..._s>	struct  ion;
template <class ..._s>	using   ion_s = bond::compose_s<let_t< _s...>, ion<>>;
template <class ..._s>	concept ion_q = bond::tag_as_p<ion_s, _s...>;
template <           >	struct  ion<> : cell::header<signed, bond::tag<ion_s>> {};


////////////////////////////////////////////////////////////////////////////////

XTAL_DEF_(let) ion_f = [] XTAL_1FN_(call) (ion_s<>);


///////////////////////////////////////////////////////////////////////////////
}/////////////////////////////////////////////////////////////////////////////
XTAL_ENV_(pop)
